[buildout]
index = https://packages.lizard.net
find-links =
prefer-final = true
socket-timeout = 1
show-picked-versions = true
extensions =
    mr.developer
parts =
#    sysegg
    omelette
    console_scripts
    mkdir
develop = .
auto-checkout =
    lizard-connector
eggs =
    lizard-scrapelib


[versions]
# Specific pins
lizard-connector = 0.3
amqp = 1.4.9
anyjson = 0.3.3
billiard = 3.3.0.23
celery =
click = 6.6
cligj = 0.4.0
collective.recipe.omelette = 0.16
coverage = 4.0.3
createcoverage = 1.5
Fiona = 1.6.4
kombu = 3.0.35
mr.developer = 1.34
numpy = 1.11.0
pep8 = 1.7.0
pkginfo = 1.2.1
pyflakes = 1.1.0
pytz = 2016.3
rasterio = 0.35.1
requests = 2.9.1
requests-toolbelt = 0.6.0
Shapely = 1.5.16
twine = 1.6.5
z3c.recipe.mkdir = 0.6
zc.buildout = 2.5.0
zc.recipe.egg = 2.0.3
zest.releaser = 6.6.4

# Required by:
# lizard-scrapelib
celery = 3.1.23
lxml = 3.6.0
ciso8601 = 1.0.1

# Required by:
# zest.releaser==6.6.4
colorama = 0.3.7
six = 1.10.0

# Required by:
# mr.developer==1.34
setuptools = 20.3.1

# Required by:
# rasterio==0.35.1
affine = 2.0.0.post1

# Required by:
# Fiona==1.6.4
# rasterio==0.35.1
click-plugins = 1.0.3

# Required by:
# snuggs==1.3.1
pyparsing = 2.1.4

# Required by:
# lizard-scrapelib==0.1.dev0
rasterstats = 0.10.3

# Required by:
# rasterio==0.35.1
snuggs = 1.3.1


[sources]
# Examples:
lizard-connector = git git@github.com:lizardsystem/lizard-connector.git
pyftpclient = git git@github.com:keepitsimple/pyFTPclient.git

# [sysegg]
# # Add eggs here that are best handled through OS-level packages.
# recipe = syseggrecipe
# force-sysegg = true
# eggs =
#     numpy

[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/data

[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
dependent-scripts = true
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    createcoverage
    pep8
    pyflakes
    zest.releaser

# [scrape-cronjob]
# recipe = z3c.recipe.usercrontab
# times = @daily
# command = ${buildout:bin-directory}/scrape-all-daily

